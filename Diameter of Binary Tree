/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public int[] solve(TreeNode root) {
        
        if(root == null)return new int[]{0, -1};
        
        int[] left = solve(root.left);
        int[] right = solve(root.right);
        
        int maximumAns = Math.max(Math.max(left[0], right[0]), left[1] + right[1] + 2);
        return new int[]{maximumAns, Math.max(left[1], right[1]) + 1};
    }
    
    public int diameterOfBinaryTree(TreeNode root) {
        return solve(root)[0];
    }
}
